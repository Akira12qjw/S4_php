openapi: 3.0.0
info:
  title: Product Management API
  description: API for managing products in store
  version: 1.0.0
  contact:
    email: your-email@example.com

servers:
  - url: http://localhost:8080/S4_PHP
    description: Local development server

paths:
  /api/product:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        "200":
          description: List of products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

    post:
      summary: Create a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - category_id
              properties:
                name:
                  type: string
                  example: "Laptop Hutech"
                description:
                  type: string
                  example: "Tesst"
                price:
                  type: string
                  example: "20.0"
                category_id:
                  type: integer
                  example: 1
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product created successfully"

  /api/product/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
        description: Product ID

    get:
      summary: Get product by ID
      tags:
        - Products
      responses:
        "200":
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

    put:
      summary: Update product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Laptop HP"
                description:
                  type: string
                  example: "Intel"
                price:
                  type: string
                  example: "30.0"
                category_id:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product updated successfully"

    delete:
      summary: Delete product
      tags:
        - Products
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted successfully"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Laptop 9"
        description:
          type: string
          example: "Good"
        price:
          type: string
          example: "2000.00"
        category_name:
          type: string
          example: "Tech"
